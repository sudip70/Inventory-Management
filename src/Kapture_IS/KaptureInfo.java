/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Kapture_IS;

import java.awt.Desktop;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.LinkedList;
import java.io.IOException;


/**
 *
 * @author Krity
 */
public class KaptureInfo extends javax.swing.JFrame {

    /**
     * Creates new form Inventory
     */
    public KaptureInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupType = new javax.swing.ButtonGroup();
        jPnlMain = new javax.swing.JPanel();
        kaptureIS = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        searchItem = new javax.swing.JComboBox<>();
        jBtnItem = new javax.swing.JButton();
        lblSearchItem = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jBtnPrice = new javax.swing.JButton();
        searchPrice = new javax.swing.JTextField();
        lblSearchPrice = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jBtnCompany = new javax.swing.JButton();
        searchCompany = new javax.swing.JComboBox<>();
        lblSearchCompany = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jTxtProdCode = new javax.swing.JTextField();
        jTxtProdName = new javax.swing.JTextField();
        jRdoCamera = new javax.swing.JRadioButton();
        jRdoAccessory = new javax.swing.JRadioButton();
        jComboCompany = new javax.swing.JComboBox<>();
        jTxtPrice = new javax.swing.JTextField();
        jTxtQty = new javax.swing.JTextField();
        jComboPriceRange = new javax.swing.JComboBox<>();
        jLblCode = new javax.swing.JLabel();
        jLblName = new javax.swing.JLabel();
        jLblPrice = new javax.swing.JLabel();
        jLblType = new javax.swing.JLabel();
        jLblCompany = new javax.swing.JLabel();
        jLblRange = new javax.swing.JLabel();
        jLblQty = new javax.swing.JLabel();
        jBtnExit = new javax.swing.JButton();
        jBtnAddToTable = new javax.swing.JButton();
        jBtnClear = new javax.swing.JButton();
        lblCode = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblCompany = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblQuatity = new javax.swing.JLabel();
        lblRange = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuFile = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kapture Inventory");
        setResizable(false);

        jPnlMain.setBackground(new java.awt.Color(153, 153, 255));
        jPnlMain.setForeground(new java.awt.Color(240, 240, 240));
        jPnlMain.setToolTipText("");

        kaptureIS.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        kaptureIS.setForeground(new java.awt.Color(240, 240, 240));
        kaptureIS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        kaptureIS.setText("Kapture IS");
        kaptureIS.setAlignmentX(0.5F);
        kaptureIS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1001), "E03 Rebel", "Camera", "Canon",  new Integer(18500),  new Integer(7), "High"},
                { new Integer(2001), "Osmo", "Accessory", "Sony",  new Integer(68000),  new Integer(12), "Medium"},
                { new Integer(3001), "Macro", "Accessory", "Nikon",  new Integer(38000),  new Integer(6), "Low"},
                { new Integer(4001), "Oben", "Accessory", "Canon",  new Integer(42000),  new Integer(15), "Low"},
                { new Integer(5001), "Backlight", "Accessory", "Sony",  new Integer(59000),  new Integer(14), "Medium"},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Code", "Product Name", "Product Type", "Company", "Price", "Quantity", "Price Range"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable.setSelectionBackground(new java.awt.Color(153, 153, 255));
        jTable.setShowGrid(false);
        jTable.setShowVerticalLines(true);
        jTable.getTableHeader().setResizingAllowed(false);
        jTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setResizable(false);
            jTable.getColumnModel().getColumn(1).setResizable(false);
            jTable.getColumnModel().getColumn(2).setResizable(false);
            jTable.getColumnModel().getColumn(3).setResizable(false);
            jTable.getColumnModel().getColumn(4).setResizable(false);
            jTable.getColumnModel().getColumn(5).setResizable(false);
            jTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel9.setBackground(new java.awt.Color(204, 204, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        searchItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Item--", "Camera", "Accessory" }));
        searchItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchItemMouseClicked(evt);
            }
        });

        jBtnItem.setText("Number of Items");
        jBtnItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnItemActionPerformed(evt);
            }
        });

        lblSearchItem.setForeground(new java.awt.Color(255, 0, 51));
        lblSearchItem.setText(" ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(searchItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jBtnItem))
                    .addComponent(lblSearchItem, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnItem))
                .addGap(19, 19, 19))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBtnPrice.setText("Search by Price");
        jBtnPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPriceActionPerformed(evt);
            }
        });

        searchPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchPriceKeyTyped(evt);
            }
        });

        lblSearchPrice.setForeground(new java.awt.Color(255, 0, 51));
        lblSearchPrice.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblSearchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnPrice)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnPrice)
                    .addComponent(searchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBtnCompany.setText("Search by Company");
        jBtnCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCompanyActionPerformed(evt);
            }
        });

        searchCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Company--", "Canon", "Sony", "Nikon" }));
        searchCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchCompanyMouseClicked(evt);
            }
        });

        lblSearchCompany.setForeground(new java.awt.Color(255, 0, 51));
        lblSearchCompany.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(searchCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnCompany))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSearchCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchCompany)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnCompany)
                    .addComponent(searchCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(169, 169, 169))
        );

        jPanel8.setBackground(new java.awt.Color(204, 204, 255));

        jTxtProdCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtProdCodeKeyTyped(evt);
            }
        });

        jTxtProdName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtProdNameKeyTyped(evt);
            }
        });

        btnGroupType.add(jRdoCamera);
        jRdoCamera.setText("Camera");
        jRdoCamera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRdoCameraMouseClicked(evt);
            }
        });

        btnGroupType.add(jRdoAccessory);
        jRdoAccessory.setText("Accessory");
        jRdoAccessory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRdoAccessoryMouseClicked(evt);
            }
        });

        jComboCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Company--", "Canon", "Sony", "Nikon" }));
        jComboCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboCompanyMouseClicked(evt);
            }
        });

        jTxtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtPriceKeyTyped(evt);
            }
        });

        jTxtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtQtyKeyTyped(evt);
            }
        });

        jComboPriceRange.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Range--", "Low", "Medium", "High" }));
        jComboPriceRange.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboPriceRangeMouseClicked(evt);
            }
        });

        jLblCode.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblCode.setText("Product Code");

        jLblName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblName.setText("Product Name");

        jLblPrice.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblPrice.setText("Price");

        jLblType.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblType.setText("Product Type");

        jLblCompany.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblCompany.setText("Company");

        jLblRange.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblRange.setText("Price Range");

        jLblQty.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLblQty.setText("Quantity");

        jBtnExit.setText("Exit");
        jBtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExitActionPerformed(evt);
            }
        });

        jBtnAddToTable.setText("Add to table");
        jBtnAddToTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddToTableActionPerformed(evt);
            }
        });

        jBtnClear.setText("Clear");
        jBtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnClearActionPerformed(evt);
            }
        });

        lblCode.setForeground(new java.awt.Color(255, 51, 51));
        lblCode.setToolTipText("");

        lblName.setForeground(new java.awt.Color(255, 51, 51));
        lblName.setToolTipText("");

        lblType.setForeground(new java.awt.Color(255, 51, 51));

        lblCompany.setForeground(new java.awt.Color(255, 51, 51));
        lblCompany.setToolTipText("");

        lblPrice.setForeground(new java.awt.Color(255, 51, 51));

        lblQuatity.setForeground(new java.awt.Color(255, 51, 51));

        lblRange.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLblCode, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(lblCode))
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                            .addGap(10, 10, 10)
                                            .addComponent(lblName))
                                        .addComponent(jTxtProdCode, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jBtnAddToTable, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLblQty)
                                        .addComponent(jLblRange))
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                            .addGap(42, 42, 42)
                                            .addComponent(lblQuatity))
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                            .addGap(32, 32, 32)
                                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel8Layout.createSequentialGroup()
                                                    .addGap(10, 10, 10)
                                                    .addComponent(lblRange))
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jTxtQty, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboPriceRange, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jBtnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLblPrice)
                                            .addComponent(jLblType)
                                            .addComponent(jLblCompany))
                                        .addGap(6, 6, 6))
                                    .addComponent(jLblName, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTxtProdName, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                                .addComponent(jRdoCamera, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jRdoAccessory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jComboCompany, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTxtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblPrice)
                                                    .addComponent(lblType)))))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(lblCompany)))))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblCode)
                    .addComponent(jTxtProdCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblName)
                    .addComponent(jTxtProdName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblType)
                    .addComponent(jRdoCamera)
                    .addComponent(jRdoAccessory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCompany)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblCompany)
                    .addComponent(jComboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblPrice)
                    .addComponent(jTxtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblQuatity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblQty)
                    .addComponent(jTxtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblRange)
                    .addComponent(jComboPriceRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnAddToTable)
                    .addComponent(jBtnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBtnExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPnlMainLayout = new javax.swing.GroupLayout(jPnlMain);
        jPnlMain.setLayout(jPnlMainLayout);
        jPnlMainLayout.setHorizontalGroup(
            jPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(kaptureIS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPnlMainLayout.setVerticalGroup(
            jPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlMainLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(kaptureIS, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Menu");

        menuFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuFile.setText("Open File");
        menuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileActionPerformed(evt);
            }
        });
        jMenu1.add(menuFile);
        jMenu1.add(jSeparator1);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuSave.setText("Save File");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(menuSave);
        jMenu1.add(jSeparator2);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        menuHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menuHelp.setText("User Manual");
        menuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHelpActionPerformed(evt);
            }
        });
        jMenu2.add(menuHelp);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jBtnAddToTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddToTableActionPerformed
        // extracting tha data from text fields, radio button and combo boxes
        String code = jTxtProdCode.getText().trim();
        String name = jTxtProdName.getText().trim();

        String type = "";
        if(jRdoCamera.isSelected()){
            type = jRdoCamera.getText();
        }
        else if(jRdoAccessory.isSelected()){
            type = jRdoAccessory.getText();
        }

        String company = (String) jComboCompany.getSelectedItem();
        String price = jTxtPrice.getText().trim();
        String quantity = jTxtQty.getText().trim();
        String range = (String) jComboPriceRange.getSelectedItem();
        
        //Adding data in an array:
        String data[] = {code, name, type, company, price, quantity, range};
        
        int nextRow = 5; //to go to the next row //next row has the value 5 as the table has 5 values manually set
        boolean rowEmpty = false;//to check if row is empty or not
        String s;
        int colCount = jTable.getColumnCount();
        
        try{
            if (!code.isEmpty()){
                if (!name.isEmpty()){
                    if (!type.isEmpty()){
                        if (jComboCompany.getSelectedIndex() != 0){
                            if (!price.isEmpty()){
                                if (!quantity.isEmpty()){
                                    if (jComboPriceRange.getSelectedIndex() != 0){

                                        //Checking if the row is empty or not before entering data
                                        do{
                                            s = (String) jTable.getValueAt(nextRow, 0);
                                            //Changing the value in nextRow if the 0 index in the selected row contains data
                                            if (s != null && s.length() != 0){
                                                nextRow++;
                                            }else{
                                                rowEmpty = true;
                                            }

                                        }while(!rowEmpty);

                                        //Entering data in a row
                                        for (int i = 0; i < colCount; i++){
                                            jTable.setValueAt(data[i], nextRow, i);
                                        }
                                        
                                        JOptionPane.showMessageDialog(rootPane, "Product Added!");
                                        
                                        //Clearing everything on adding row to table
                                        jTxtProdCode.setText("");
                                        jTxtProdName.setText("");
                                        btnGroupType.clearSelection();
                                        jComboCompany.setSelectedIndex(0);
                                        jTxtPrice.setText("");
                                        jTxtQty.setText("");
                                        jComboPriceRange.setSelectedIndex(0);

                                        lblCode.setText(""); 
                                        lblName.setText("");
                                        lblType.setText("");
                                        lblCompany.setText("");
                                        lblPrice.setText("");
                                        lblQuatity.setText("");
                                        lblRange.setText("");
                                    }else{
                                        lblCode.setText(""); 
                                        lblName.setText("");
                                        lblType.setText("");
                                        lblCompany.setText("");
                                        lblPrice.setText("");
                                        lblQuatity.setText("");
                                        lblRange.setText("*Required Field");
                                        jComboPriceRange.grabFocus();
                                    }
                                }else{
                                    lblCode.setText(""); 
                                    lblName.setText("");
                                    lblType.setText("");
                                    lblCompany.setText("");
                                    lblPrice.setText("");
                                    lblQuatity.setText("*Required Field");
                                    jTxtQty.grabFocus();
                                    lblRange.setText("");
                                }
                            }else{
                                lblCode.setText(""); 
                                lblName.setText("");
                                lblType.setText("");
                                lblCompany.setText("");
                                lblPrice.setText("*Required Field");
                                jTxtPrice.grabFocus();
                                lblQuatity.setText("");
                                lblRange.setText("");
                            }
                        }else{
                            lblCode.setText(""); 
                            lblName.setText("");
                            lblType.setText("");
                            lblCompany.setText("*Required Field");
                            jComboCompany.grabFocus();
                            lblPrice.setText("");
                            lblQuatity.setText("");
                            lblRange.setText("");
                        }
                    }else{
                        lblCode.setText(""); 
                        lblName.setText("");
                        lblType.setText("*Required Field");
                        lblCompany.setText("");
                        lblPrice.setText("");
                        lblQuatity.setText("");
                        lblRange.setText("");
                    }
                }else{
                    lblCode.setText(""); 
                    lblName.setText("*Required Field");     
                    jTxtProdName.grabFocus();
                    lblType.setText("");
                    lblCompany.setText("");
                    lblPrice.setText("");
                    lblQuatity.setText("");
                    lblRange.setText("");
                }
            }else{
                lblCode.setText("*Required Field");
                jTxtProdCode.grabFocus();
                lblName.setText("");
                lblType.setText("");
                lblCompany.setText("");
                lblPrice.setText("");
                lblQuatity.setText("");
                lblRange.setText("");
            }
        }catch(Exception e){
            DefaultTableModel model = (DefaultTableModel) jTable.getModel();
            model.addRow(data);
            JOptionPane.showMessageDialog(rootPane, "Product Added!");
            
            //Clearing everything on adding row to table
            jTxtProdCode.setText("");
            jTxtProdName.setText("");
            btnGroupType.clearSelection();
            jComboCompany.setSelectedIndex(0);
            jTxtPrice.setText("");
            jTxtQty.setText("");
            jComboPriceRange.setSelectedIndex(0);

            lblCode.setText(""); 
            lblName.setText("");
            lblType.setText("");
            lblCompany.setText("");
            lblPrice.setText("");
            lblQuatity.setText("");
            lblRange.setText("");
        }
        
    }//GEN-LAST:event_jBtnAddToTableActionPerformed

    private void jBtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnClearActionPerformed
        // TODO add your handling code here:
        jTxtProdCode.setText("");
        jTxtProdName.setText("");
        btnGroupType.clearSelection();
        jComboCompany.setSelectedIndex(0);
        jTxtPrice.setText("");
        jTxtQty.setText("");
        jComboPriceRange.setSelectedIndex(0);
        
        lblCode.setText(""); 
        lblName.setText("");
        lblType.setText("");
        lblCompany.setText("");
        lblPrice.setText("");
        lblQuatity.setText("");
        lblRange.setText("");
    }//GEN-LAST:event_jBtnClearActionPerformed

    private void jBtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExitActionPerformed
        // Closes the window
        System.exit(0);
    }//GEN-LAST:event_jBtnExitActionPerformed

    private void jTxtProdCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtProdCodeKeyTyped
        // Checks if the keys typed are numbers
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == java.awt.event.KeyEvent.VK_BACK_SPACE) || (c == java.awt.event.KeyEvent.VK_DELETE))){
            evt.consume();
            lblCode.setText("*Invalid Number"); 
        }else{
            lblCode.setText("");
        }
    }//GEN-LAST:event_jTxtProdCodeKeyTyped

    private void jTxtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtPriceKeyTyped
        // Checks if the keys typed are numbers
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == java.awt.event.KeyEvent.VK_BACK_SPACE) || (c == java.awt.event.KeyEvent.VK_DELETE))){
            evt.consume();
            lblPrice.setText("*Invalid Number"); 
        }else{
            lblPrice.setText("");
        }
    }//GEN-LAST:event_jTxtPriceKeyTyped

    private void jTxtQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtQtyKeyTyped
        // Checks if the keys typed are numbers
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == java.awt.event.KeyEvent.VK_BACK_SPACE) || (c == java.awt.event.KeyEvent.VK_DELETE))){
            evt.consume();
            lblQuatity.setText("*Invalid Number"); 
        }else{
            lblQuatity.setText("");
        }
    }//GEN-LAST:event_jTxtQtyKeyTyped

    private void jTxtProdNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtProdNameKeyTyped
        // To clear the label from all warnings on typing
        lblName.setText("");
    }//GEN-LAST:event_jTxtProdNameKeyTyped

    private void jRdoCameraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRdoCameraMouseClicked
        // To clear the label from all warnings on clicking
        lblType.setText("");
    }//GEN-LAST:event_jRdoCameraMouseClicked

    private void jRdoAccessoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRdoAccessoryMouseClicked
        // To clear the label from all warnings on clicking
        lblType.setText("");
    }//GEN-LAST:event_jRdoAccessoryMouseClicked

    private void jComboCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboCompanyMouseClicked
        // To clear the label from all warnings on clicking
        lblCompany.setText("");
    }//GEN-LAST:event_jComboCompanyMouseClicked

    private void jComboPriceRangeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboPriceRangeMouseClicked
        // To clear the label from all warnings on clicking
        lblRange.setText("");
    }//GEN-LAST:event_jComboPriceRangeMouseClicked

    private void jBtnPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPriceActionPerformed
        try{
            LinkedList<DataModel> dm = new LinkedList<DataModel>(); //Creating arraylist

            // checks if price entered
            if(!searchPrice.getText().trim().isEmpty()){

                int[] list = new int[jTable.getRowCount()];
                int row = jTable.getRowCount();

                //making a list of only price
                for(int i=0; i<row; i++){
                    int price = Integer.parseInt(jTable.getValueAt(i, 4).toString());

                    list[i]=price;
                    count++;
                }

                //sorting the price list
                SelectionSorter.sort(list);

                //creating sorted list of rows of data from the table
                for(int i=0; i<list.length; i++){
                    for(int j=0; j<row; j++){
                        int found = Integer.parseInt(jTable.getValueAt(j, 4).toString());
                        if(list[i]==found){
                            int code = Integer.parseInt(jTable.getValueAt(j, 0).toString());
                            String name = (String) jTable.getValueAt(j, 1);
                            String type = (String) jTable.getValueAt(j, 2);
                            String company = (String) jTable.getValueAt(j, 3);
                            int price = Integer.parseInt(jTable.getValueAt(j, 4).toString());
                            int quantity = Integer.parseInt(jTable.getValueAt(j, 5).toString());
                            String range = (String) jTable.getValueAt(j, 6);

                            try{
                                if (dm.get(i).getCode()==code){
                                    continue;
                                }else{
                                    dm.add(new DataModel(code,name,type,company,price,quantity,range));

                                }
                            }catch(Exception e){
                                dm.add(new DataModel(code,name,type,company,price,quantity,range));
                                break;
                            }
                        }
                    }
                }//for implementing binary search
                int foundAt = BinarySearcher.search(list,0,list.length-1,Integer.parseInt(searchPrice.getText()));
                System.out.println(foundAt);
                if(foundAt == -1){
                    JOptionPane.showMessageDialog(null, "A product worth Rs."+searchPrice.getText()+" not found!", "Not Found", JOptionPane.ERROR_MESSAGE);
                }else{
                    DataModel data = dm.get(foundAt);
                    JOptionPane.showMessageDialog(null, "Value Found! \n\n"+
                            "Product code: "+data.getCode()+
                            "\nProduct Name: "+data.getName()+
                            "\nProduct Type: "+data.getType()+
                            "\nCompany: "+data.getCompany()+
                            "\nPrice: Rs. "+data.getPrice(),
                            "Value Found",JOptionPane.INFORMATION_MESSAGE);
                }   
            }else{
                lblSearchPrice.setText("*Required Field");
                searchPrice.grabFocus();
            }
        }catch(NullPointerException e){
            
            JOptionPane.showMessageDialog(rootPane, "Table has Empty Rows!\n\n"+"Hint: Import values from the 'open file' in menu\n" +"or press: ctrl+O","Try Again!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnPriceActionPerformed

    private void searchPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchPriceKeyTyped
        // Checks if the keys typed are numbers
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') || (c == java.awt.event.KeyEvent.VK_BACK_SPACE) || (c == java.awt.event.KeyEvent.VK_DELETE))){
            evt.consume();
            lblSearchPrice.setText("*Invalid Number"); 
        }else{
            lblSearchPrice.setText(" ");
        }
    }//GEN-LAST:event_searchPriceKeyTyped

    //linear search for number of items in a company
    int count = 0;
    void linearSearcherCompany(String userChoice,int index){
        count=0;
        boolean flag=false;
        String toSearch = searchCompany.getSelectedItem().toString();
        int row = jTable.getRowCount();
        ArrayList<String> list=new ArrayList<String>(); //Creating arraylist    

        for(int i=0;i<row;i++){
            userChoice = jTable.getValueAt(i,index).toString();
            if(userChoice.equals(toSearch)){

                String name = (String) jTable.getValueAt(i, 1);
                list.add(name);
                count++;
                flag = true;
            }
        }
        
        if (index==3 && count>0){
            JOptionPane.showMessageDialog(null, "Number of products available for "+toSearch+": "+count);
        }
        
        if (flag){
            String devFound = "";
            for (String data: list){
                devFound += data + "\n"; 
            }
            JOptionPane.showMessageDialog(null, "Products Found:\n\n"+devFound);
        }else{
            JOptionPane.showMessageDialog(null, "Product Not found!", "Not Found", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jBtnCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCompanyActionPerformed
        try{
            //checks if combo box value selected
            if (searchCompany.getSelectedIndex() != 0){

                String company = searchCompany.getSelectedItem().toString();

                if (company.equals("Canon")){
                    linearSearcherCompany(company, 3);
                }
                if (company.equals("Sony")){
                    linearSearcherCompany(company, 3);
                }
                if (company.equals("Nikon")){
                    linearSearcherCompany(company, 3);
                }
            }else{
                lblSearchCompany.setText("*Required Field");
                searchCompany.grabFocus();
            }
        }catch(NullPointerException e){
            
            JOptionPane.showMessageDialog(rootPane, "Table has Empty Rows!\n\n"+"Hint: Import values from the 'open file' in menu\n" +"or press: ctrl+O","Try Again!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnCompanyActionPerformed

    private void searchCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchCompanyMouseClicked
        // To clear the label from all warnings on clicking
        lblSearchCompany.setText(" ");
    }//GEN-LAST:event_searchCompanyMouseClicked
    
    //linear search for number of items in a category
    
    void linearSearcherItem(String userChoice,int index){
        count=0;
        boolean flag=false;
        String toSearch = searchItem.getSelectedItem().toString();
        int row = jTable.getRowCount();
        ArrayList<String> list=new ArrayList<String>(); //Creating arraylist    

        for(int i=0;i<row;i++){
            userChoice = jTable.getValueAt(i,index).toString();
            if(userChoice.equals(toSearch)){

                String name = (String) jTable.getValueAt(i, 1);
                list.add(name);
                count++;
                flag = true;
            }
        }

        if (index==2 && count>0){
            JOptionPane.showMessageDialog(null, "Number of " +toSearch+ ": "+count);
        }

        if (flag){
            String devFound = "";
            for (String data: list){
                devFound += data + "\n"; 
            }
            JOptionPane.showMessageDialog(null, "Products Found:\n\n"+devFound);
        }else{
            JOptionPane.showMessageDialog(null, "Product not found!", "Not Found", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jBtnItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnItemActionPerformed
        try{    
            //checks if combo box value selected

            if (searchItem.getSelectedIndex() != 0){

                String item = searchItem.getSelectedItem().toString();

                if (item.equals("Camera")){
                    linearSearcherItem(item, 2);
                }
                if (item.equals("Accessory")){
                    linearSearcherItem(item, 2);
                }
            }else{
                lblSearchItem.setText("*Required Field");
                searchItem.grabFocus();
            }
        }catch(NullPointerException e){
            
            JOptionPane.showMessageDialog(rootPane, "Table has Empty Rows!\n\n"+"Hint: Import values from the 'open file' in menu\n" +"or press: ctrl+O","Try Again!",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBtnItemActionPerformed

    private void searchItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchItemMouseClicked
        // To clear the label from all warnings on clicking
        lblSearchItem.setText(" ");
    }//GEN-LAST:event_searchItemMouseClicked

    private void menuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileActionPerformed
        
        String path=System.getProperty("user.dir") + "\\src\\Kapture_IS\\import.txt";
              
        try{         
            
            BufferedReader br = new BufferedReader(new FileReader(path));
            String line="";
            
            int nextRow = 5; //to go to the next row //next row has the value 5 as the table has 5 values manually set
            boolean rowEmpty = false;//to check if row is empty or not
            String s;
            
            while((line = br.readLine())!=null){
                String[] data=line.split(",");
                
                //Checking if the row is empty or not before entering data
                do{
                    s = (String) jTable.getValueAt(nextRow, 0);
                    //Changing the value in nextRow if the 0 index in the selected row contains data
                    if (s != null && s.length() != 0){
                        nextRow++;
                    }else{
                        rowEmpty = true;
                    }

                }while(!rowEmpty);
                
                //adding data to empty row
                for(int j =0; j<data.length; j++){
                    jTable.setValueAt(data[j], nextRow, j);
                }
            }
            
            JOptionPane.showMessageDialog(rootPane, "File Imported!");
            
        }catch (FileNotFoundException ex) {
            
            Logger.getLogger(KaptureInfo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "File not found! Try again!","Error",JOptionPane.ERROR_MESSAGE);
            
        }catch (Exception e){
            
            FileReader fr = null;
            try {
                fr = new FileReader(path);
                BufferedReader br = new BufferedReader(fr);
                Object[] lines = br.lines().toArray();
                
                DefaultTableModel model = (DefaultTableModel)jTable.getModel();
                
                for (int i=0; i < lines.length; i++){
                    String[] row = lines[i].toString().split(",");
                    model.addRow(row);
                }
                
                JOptionPane.showMessageDialog(rootPane, "File Imported!");
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(KaptureInfo.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "File not found! Try again!","Error",JOptionPane.ERROR_MESSAGE);
                
            } finally {
                try {
                    fr.close();
                } catch (IOException ex) {
                    Logger.getLogger(KaptureInfo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_menuFileActionPerformed

    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        // Closes the window
        System.exit(0);
    }//GEN-LAST:event_menuExitActionPerformed

    private void menuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHelpActionPerformed
        String path = System.getProperty("user.dir") + "\\src\\Kapture_IS\\help.pdf";
        try {
            Desktop.getDesktop().open(new java.io.File(path));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "File not found! Try again!","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuHelpActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        String path = System.getProperty("user.dir") + "\\src\\Kapture_IS\\export.txt";
        File file = new File(path);
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            
            for (int i=0; i < jTable.getRowCount(); i++){
                for (int j=0; j < jTable.getColumnCount(); j++){
                    bw.write(jTable.getValueAt(i, j).toString());
                    bw.write(",");
                }
                bw.write("\n");
            }
            
            bw.close();
            fw.close();
            
            JOptionPane.showMessageDialog(rootPane, "File Exported!");
            
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(rootPane, "File not Exported!\n\n"+"Table has Empty Rows!","Error",JOptionPane.ERROR_MESSAGE);
        }catch (IOException ex) {
            Logger.getLogger(KaptureInfo.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "File not Exported!");
        }
    }//GEN-LAST:event_menuSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KaptureInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KaptureInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KaptureInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KaptureInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KaptureInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroupType;
    private javax.swing.JButton jBtnAddToTable;
    private javax.swing.JButton jBtnClear;
    private javax.swing.JButton jBtnCompany;
    private javax.swing.JButton jBtnExit;
    private javax.swing.JButton jBtnItem;
    private javax.swing.JButton jBtnPrice;
    private javax.swing.JComboBox<String> jComboCompany;
    private javax.swing.JComboBox<String> jComboPriceRange;
    private javax.swing.JLabel jLblCode;
    private javax.swing.JLabel jLblCompany;
    private javax.swing.JLabel jLblName;
    private javax.swing.JLabel jLblPrice;
    private javax.swing.JLabel jLblQty;
    private javax.swing.JLabel jLblRange;
    private javax.swing.JLabel jLblType;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPnlMain;
    private javax.swing.JRadioButton jRdoAccessory;
    private javax.swing.JRadioButton jRdoCamera;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTxtPrice;
    private javax.swing.JTextField jTxtProdCode;
    private javax.swing.JTextField jTxtProdName;
    private javax.swing.JTextField jTxtQty;
    private javax.swing.JLabel kaptureIS;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuatity;
    private javax.swing.JLabel lblRange;
    private javax.swing.JLabel lblSearchCompany;
    private javax.swing.JLabel lblSearchItem;
    private javax.swing.JLabel lblSearchPrice;
    private javax.swing.JLabel lblType;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuFile;
    private javax.swing.JMenuItem menuHelp;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JComboBox<String> searchCompany;
    private javax.swing.JComboBox<String> searchItem;
    private javax.swing.JTextField searchPrice;
    // End of variables declaration//GEN-END:variables
}
